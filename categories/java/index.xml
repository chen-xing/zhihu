<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on 知乎</title><link>https://www.zhihu.hk/categories/java/</link><description>Recent content in Java on 知乎</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Tue, 17 May 2022 21:55:00 +0800</lastBuildDate><atom:link href="https://www.zhihu.hk/categories/java/index.xml" rel="self" type="application/rss+xml"/><item><title>idea实现代码热部署</title><link>https://www.zhihu.hk/idea-realizes-code-hot-deployment.html</link><pubDate>Tue, 17 May 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/idea-realizes-code-hot-deployment.html</guid><description>&lt;h2 id="dynamic-code-evolution-for-java">Dynamic Code Evolution for Java&lt;/h2>
&lt;p>动态代码演进虚拟机 (DCE VM) 是对 Java HotSpot VM 的修改，它允许在运行时无限制地重新定义加载的类。HotSpot™ VM 的当前热交换机制只允许更改方法体。增强的 VM 允许添加和删除字段和方法以及更改类的超类型。&lt;/p></description></item><item><title>druid配置数据库连接使用密文密码</title><link>https://www.zhihu.hk/Druid-configures-database-connections-to-use-ciphertext-passwords.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Druid-configures-database-connections-to-use-ciphertext-passwords.html</guid><description>&lt;p>druid配置数据库连接使用密文密码
spring使用druid配置dataSource片段代码
dataSource配置&lt;/p></description></item><item><title>freemarker 使用记录</title><link>https://www.zhihu.hk/how-to-use-freemarker.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/how-to-use-freemarker.html</guid><description>freemarker 使用记录</description></item><item><title>GC调优参数</title><link>https://www.zhihu.hk/GC-tuning-parameters.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/GC-tuning-parameters.html</guid><description>&lt;blockquote>
&lt;p>原文地址： &lt;a href="https://juejin.im/post/5c94a123f265da610916081f">https://juejin.im/post/5c94a123f265da610916081f&lt;/a>。&lt;/p>&lt;/blockquote>
&lt;h2 id="jvm-配置常用参数">JVM 配置常用参数&lt;/h2>
&lt;ol>
&lt;li>堆参数；&lt;/li>
&lt;li>回收器参数；&lt;/li>
&lt;li>项目中常用配置；&lt;/li>
&lt;li>常用组合；&lt;/li>
&lt;/ol>
&lt;h3 id="堆参数">堆参数&lt;/h3>
&lt;p>
 &lt;img class="mx-auto" alt="img" src="https://ask.qcloudimg.com/http-save/yehe-1130324/975rk4d0wx.jpeg?imageView2/2/w/1620" /> 
 &lt;/p></description></item><item><title>idea快捷键</title><link>https://www.zhihu.hk/idea-shortcuts.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/idea-shortcuts.html</guid><description>idea快捷键</description></item><item><title>java spi入门</title><link>https://www.zhihu.hk/Getting-started-with-java-spi.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Getting-started-with-java-spi.html</guid><description>&lt;h3 id="1什么是spi">1、什么是SPI&lt;/h3>
&lt;p>​	SPI全称Service Provider Interface，是Java提供的一套用来被第三方实现或者扩展的接口，它可以用来启用框架扩展和替换组件。 SPI的作用就是为这些被扩展的API寻找服务实现。&lt;/p></description></item><item><title>java swing总结</title><link>https://www.zhihu.hk/java-swingSummary.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/java-swingSummary.html</guid><description>&lt;h3 id="1swing使用体验">1、swing使用体验&lt;/h3>
&lt;p>刚开始出于好奇心想体验下java开发的桌面程序，网上搜索了一把，主流的就swing和javafx。一番体验和对比。最终还是倒向了swing.对于一个后端开发来说，swing绝对是完胜。理解好几个重要的概念，界面的事情交给框架和三方。&lt;/p></description></item><item><title>java内存优化的常见方法</title><link>https://www.zhihu.hk/java-memory-optimization.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/java-memory-optimization.html</guid><description>&lt;h2 id="1慎用new">1、慎用new&lt;/h2>
&lt;p>
 &lt;img class="mx-auto" alt="优化无极限" src="https://static.gzcx.net/oneblog/20210724220825605.png-94rg002" /> 
 
new就意味着会分配对应的内存空间。利用jdk本身的变量&lt;/p></description></item><item><title>Java线上故障排查技巧</title><link>https://www.zhihu.hk/Java-Online-Troubleshooting-Tips.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Java-Online-Troubleshooting-Tips.html</guid><description>&lt;h3 id="1分类">1、分类&lt;/h3>
&lt;p>线上故障主要会包括 CPU、磁盘、内存以及网络问题，而大多数故障可能会包含不止一个层面的问题，所以进行排查时候尽量四个方面依次排查一遍。&lt;/p></description></item><item><title>juc介绍</title><link>https://www.zhihu.hk/java-juc.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/java-juc.html</guid><description>&lt;h2 id="1日常工作中的并发">1、日常工作中的并发&lt;/h2>
&lt;p>今天的日程&lt;/p>
&lt;ul>
&lt;li>jira待处理的任务两个&lt;/li>
&lt;li>完成测试环境的发布，通知测试开始验证&lt;/li>
&lt;li>钉钉联系客户了解问题发生的过程&lt;/li>
&lt;li>迭代新功能开发&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>实际过程中我们怎么做？&lt;/strong>&lt;/p></description></item><item><title>jvm 知识点汇总</title><link>https://www.zhihu.hk/Summary-of-jvm-knowledge-points.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Summary-of-jvm-knowledge-points.html</guid><description>&lt;p>无论什么级别的Java从业者，JVM都是进阶时必须迈过的坎。不管是工作还是面试中，JVM都是必考题。如果不懂JVM的话，薪酬会非常吃亏（近70%的面试者挂在JVM上了）。&lt;/p></description></item><item><title>故障处理总纲</title><link>https://www.zhihu.hk/Troubleshooting-outline.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Troubleshooting-outline.html</guid><description>&lt;h3 id="1前言">1、前言&lt;/h3>
&lt;p>没有完美的程序，是程序都有bug,都有容量限制。所以出现故障也在情理之中，那么面对突如其来的bug,我们该如何应对呢？这是一个值得思考的问题？&lt;/p></description></item><item><title>故障处理系列-httpclient 3.x的bug引发的惨案</title><link>https://www.zhihu.hk/Troubleshooting-series-tragedy-caused-by-the-bug-of-httpclient-3.x.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Troubleshooting-series-tragedy-caused-by-the-bug-of-httpclient-3.x.html</guid><description>&lt;h3 id="1故障现象描述">1、故障现象描述&lt;/h3>
&lt;p>调用链路是 A-&amp;gt;B-&amp;gt;C&lt;/p>
&lt;p>目前出故障的是B服务。A是网关，C是底层服务&lt;/p></description></item><item><title>故障处理系列-大文件引发OOM</title><link>https://www.zhihu.hk/Troubleshooting-Series-Large-File-Causes-OOM.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Troubleshooting-Series-Large-File-Causes-OOM.html</guid><description>&lt;h3 id="1场景还原">1、场景还原&lt;/h3>
&lt;p>系统A是一个需要加载文件到内存中进行处理的系统&lt;/p></description></item><item><title>故障处理系列-数据清洗堵塞mq</title><link>https://www.zhihu.hk/Troubleshooting-Series-Data-Cleaning-and-Blocking-MQ.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.zhihu.hk/Troubleshooting-Series-Data-Cleaning-and-Blocking-MQ.html</guid><description>&lt;h3 id="1故障还原">1、故障还原&lt;/h3>
&lt;ul>
&lt;li>系统负载迅速升高&lt;/li>
&lt;li>大量mq的发送被限流，影响到了核心业务（有强依赖mq驱动的）&lt;/li>
&lt;/ul>
&lt;h3 id="2根因分析">2、根因分析&lt;/h3>
&lt;ul>
&lt;li>上游的一个业务触发了系统的数据清洗&lt;/li>
&lt;li>清理的数据比较多，清洗的逻辑中需要对外发送大量的广播&lt;/li>
&lt;li>mq的发送频率过快，大量的超时，进而被熔断&lt;/li>
&lt;li>大量的mq无法完成发送&lt;/li>
&lt;li>上游大量基于mq驱动的业务受阻&lt;/li>
&lt;/ul>
&lt;h3 id="3处理办法">3、处理办法&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>清洗数据为非核心业务，可以控制处理时间、策略。避免对核心业务的冲击&lt;/p></description></item></channel></rss>