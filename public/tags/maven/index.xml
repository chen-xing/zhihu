<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on 知乎</title>
    <link>http://localhost:1313/tags/maven/</link>
    <description>Recent content in Maven on 知乎</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 15 Mar 2022 21:55:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/maven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>maven 详解-史上最全的maven教程</title>
      <link>http://localhost:1313/Detailed-maven---the-most-complete-maven-tutorial-in-history.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Detailed-maven---the-most-complete-maven-tutorial-in-history.html</guid>
      <description>&lt;h3 id=&#34;1常用maven仓库&#34;&gt;1、常用maven仓库&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://mvnrepository.com/&#34;&gt;http://mvnrepository.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://search.maven.org/&#34;&gt;http://search.maven.org/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://repository.sonatype.org/&#34;&gt;https://repository.sonatype.org/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2生成项目&#34;&gt;2、生成项目&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21创建maven的普通java项目&#34;&gt;2.1、创建Maven的普通Java项目&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mvn archetype:create&#xD;&#xA;    -DgroupId=packageName&#xD;&#xA;    -DartifactId=projectName&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;22创建maven的web项目&#34;&gt;2.2、创建Maven的Web项目&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mvn archetype:create&#xD;&#xA;    -DgroupId=packageName&#xD;&#xA;    -DartifactId=webappName&#xD;&#xA;    -DarchetypeArtifactId=maven-archetype-webapp&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;23反向生成-maven-项目的骨架&#34;&gt;2.3、反向生成 maven 项目的骨架&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mvn archetype:generate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3发布代码到远程仓库&#34;&gt;3、发布代码到远程仓库&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mvn install:install-file -DgroupId=com -DartifactId=client -Dversion=0.1.0 -Dpackaging=jar -Dfile=d:\client-0.1.0.jar&#xD;&#xA;-DdownloadSources=true&#xD;&#xA;-DdownloadJavadocs=true&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4常用命令&#34;&gt;4、常用命令&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn –version&lt;/td&gt;&#xA;          &lt;td&gt;显示版本信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn clean&lt;/td&gt;&#xA;          &lt;td&gt;清理项目生产的临时文件,一般是模块下的target目录&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn compile&lt;/td&gt;&#xA;          &lt;td&gt;编译源代码，一般编译模块下的src/main/java目录&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn package&lt;/td&gt;&#xA;          &lt;td&gt;项目打包工具,会在模块下的target目录生成jar或war等文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn test&lt;/td&gt;&#xA;          &lt;td&gt;测试命令,或执行src/test/java/下junit的测试用例.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn install&lt;/td&gt;&#xA;          &lt;td&gt;将打包的jar/war文件复制到你的本地仓库中,供其他模块使用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn deploy&lt;/td&gt;&#xA;          &lt;td&gt;将打包的文件发布到远程参考,提供其他人员进行下载依赖&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn site&lt;/td&gt;&#xA;          &lt;td&gt;生成项目相关信息的网站&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn eclipse:eclipse&lt;/td&gt;&#xA;          &lt;td&gt;将项目转化为Eclipse项目&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn dependency:tree&lt;/td&gt;&#xA;          &lt;td&gt;打印出项目的整个依赖树&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn archetype:generate&lt;/td&gt;&#xA;          &lt;td&gt;创建Maven的普通java项目&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn tomcat:run&lt;/td&gt;&#xA;          &lt;td&gt;在tomcat容器中运行web应用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mvn jetty:run&lt;/td&gt;&#xA;          &lt;td&gt;调用 Jetty 插件的 Run 目标在 Jetty Servlet 容器中启动 web 应用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意：运行maven命令的时候，首先需要定位到maven项目的目录，也就是项目的pom.xml文件所在的目录。否则，必以通过参数来指定项目的目录。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
