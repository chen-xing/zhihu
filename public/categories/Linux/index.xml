<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 知乎</title>
    <link>http://localhost:1313/categories/Linux/</link>
    <description>Recent content in Linux on 知乎</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 20 Mar 2022 21:55:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/Linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>linux常用知识</title>
      <link>http://localhost:1313/linux-base-command.html</link>
      <pubDate>Sun, 20 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/linux-base-command.html</guid>
      <description>&lt;h2 id=&#34;1网络抓包&#34;&gt;1、网络抓包&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fconfig查看网卡 ip host &#xD;&#xA;tcpdump -i eth1  host hostname and port 80  -w /tmp/data.pcap&#xD;&#xA;开源软件RawCap也可以抓到(下载地址:http://www.netresec.com/?page=RawCap).将抓到的包保存为pcap后缀,用wireshark打开,就可以继续分析了.&#xD;&#xA;win7以管理员身份运行，ctrl+c停止后pcap文件才有内容。今天刚好用，开始不会ctrl+c也是这种情况&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2压缩解压&#34;&gt;2、压缩解压&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1压缩命令&#34;&gt;1.压缩命令：&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;命令格式：tar  -zcvf   压缩文件名.tar.gz   被压缩文件名&lt;/li&gt;&#xA;&lt;li&gt;可先切换到当前目录下。压缩文件名和被压缩文件名都可加入路径。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2解压缩命令&#34;&gt;2.解压缩命令：&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;命令格式：tar  -zxvf   压缩文件名.tar.gz&lt;/li&gt;&#xA;&lt;li&gt;解压缩后的文件只能放在当前的目录。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3解压war包&#34;&gt;3、解压war包&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jar -xvf project.war&#xD;&#xA;需要说明的是可以指定解压到指定的目录，但是需要全路径，常用做法是把war包拷贝到当前目录后然后执行解压&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Linux下kill杀不掉进程的解决方案</title>
      <link>http://localhost:1313/The-solution-to-kill-the-process-under-Linux.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/The-solution-to-kill-the-process-under-Linux.html</guid>
      <description>&lt;p&gt;今天打开Linux虚拟机，然后使用jps命令查看，莫名奇妙多了一个1889进程&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux下查找python的安装目录</title>
      <link>http://localhost:1313/Find-the-installation-directory-of-python-under-linux.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Find-the-installation-directory-of-python-under-linux.html</guid>
      <description>&lt;h2 id=&#34;1查找docker&#34;&gt;1、查找docker&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&#xA;        &lt;img class=&#34;mx-auto&#34; alt=&#34;查找docker容器Id&#34; src=&#34;https://static.gzcx.net/figure_bed/20220223114227.png-94rg002&#34; /&gt;   &#xA;    &lt;/p&gt;&#xA;&lt;h2 id=&#34;2进入docker容器&#34;&gt;2、进入docker容器&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker exec -it e23686eaed46 /bin/sh &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;3确定python版本&#34;&gt;3、确定python版本&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python --version&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&#xA;        &lt;img class=&#34;mx-auto&#34; alt=&#34;确定python版本&#34; src=&#34;https://static.gzcx.net/figure_bed/20220223114353.png-94rg002&#34; /&gt;   &#xA;    &lt;/p&gt;&#xA;&lt;h2 id=&#34;4确定pyhon安装目录&#34;&gt;4、确定pyhon安装目录&lt;/h2&gt;&#xA;&lt;p&gt;首选输入python命令进入python的编码环境。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux备份数据库到七牛云</title>
      <link>http://localhost:1313/Linux-backup-database-to-Qiniu-cloud.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Linux-backup-database-to-Qiniu-cloud.html</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;郑重声明&lt;/strong&gt;: 本文首发于&lt;a href=&#34;https://www.94rg.com&#34;&gt;人工博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;1导读&#34;&gt;1、导读&lt;/h3&gt;&#xA;&lt;p&gt;现在有些it从业者越来越没底线，经常干一些损人不利己的蠢事。比如扫描端口，获取服务器的操作权限，进行挖矿，对数据的数据进行加密，然后丢个地址，要你去付费解密数据。数据就是一个服务的生命线。一方面我们会吐槽对方没道德，另一方面我们可以加强一下自身。做好服务器的安全措施，重要数据备份工作，这样就算被人攻击了，直接回滚数据就好了，损失可以降到最低。这里我为大家介绍的是基于七牛云的免费oss以及官方的qshell工具对文件夹进行备份。不得不说七牛还是业界比较良心的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux系统盘满了怎么办，磁盘满了怎么转移到别的磁盘？</title>
      <link>http://localhost:1313/What-should-I-do-if-the-linux-system-disk-is-full.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/What-should-I-do-if-the-linux-system-disk-is-full.html</guid>
      <description>&lt;h2 id=&#34;1现象&#34;&gt;1、现象&lt;/h2&gt;&#xA;&lt;p&gt;使用docker部署了一个蓝眼网盘，正常运行了一段时间，今天突然无法访问了。起初还以为是docker进程因为某种原因down机了，或者因为网络策略无法访问服务端口。&lt;/p&gt;</description>
    </item>
    <item>
      <title>遇到了线上故障，你的第一反应是什么?</title>
      <link>http://localhost:1313/When-you-encounter-an-online-failure-what-is-your-first-reaction.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/When-you-encounter-an-online-failure-what-is-your-first-reaction.html</guid>
      <description>&lt;h2 id=&#34;遇到了线上故障你的第一反应是什么&#34;&gt;遇到了线上故障，你的第一反应是什么&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1线上故障的分类&#34;&gt;1、线上故障的分类&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;业务报错持续发生&lt;/li&gt;&#xA;&lt;li&gt;接口响应时间变长&lt;/li&gt;&#xA;&lt;li&gt;接口拒绝响应&lt;/li&gt;&#xA;&lt;li&gt;cpu异常飚高&lt;/li&gt;&#xA;&lt;li&gt;内存异常飚高&lt;/li&gt;&#xA;&lt;li&gt;数据库连不上&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;2故障处理的总的思路&#34;&gt;2、故障处理的总的思路&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;先对故障进行简单的分类分析，如果在5分钟内有了大致思路那就继续分析几分钟；若是毫无头绪，先对集群中的机器其中的一台进行重启处理，若是重启能够缓解问题，继续重启其他的，保留一台留作问题分析即可&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;3不同的故障的处理思路&#34;&gt;3、不同的故障的处理思路&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;若是有持续的日志报错，分析错误日志一般能够发现问题&lt;/li&gt;&#xA;&lt;li&gt;获取不到数据连接的问题，一般分析数据的连接池的配置以及当前数据操作线程的情况，可能发生线程block以及线程停顿的情况&lt;/li&gt;&#xA;&lt;li&gt;接口响应变长或cpu异常飚高一般是系统中有线程存在block或者线程繁忙的情况&lt;/li&gt;&#xA;&lt;li&gt;cpu异常飚高但是无明显报错的情况一般需要观察jvm的gC情况，dump后进行内存分析&lt;/li&gt;&#xA;&lt;li&gt;内存异常飚高一般可能是出现死循环或者内存泄露&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;4故障分析中可能会用到的工具&#34;&gt;4、故障分析中可能会用到的工具&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;调用链跟踪工具&lt;/li&gt;&#xA;&lt;li&gt;es日志查询&lt;/li&gt;&#xA;&lt;li&gt;mat jvm分析&lt;/li&gt;&#xA;&lt;li&gt;arthas在线诊断工具&lt;/li&gt;&#xA;&lt;li&gt;Bistoury 在线分析工具&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;版权声明：本文为人工博客的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。&#xA;本文链接：https://www.94rg.com/article/1719&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
