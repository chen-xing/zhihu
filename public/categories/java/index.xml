<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on 知乎</title>
    <link>http://localhost:1313/categories/java/</link>
    <description>Recent content in Java on 知乎</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 17 May 2022 21:55:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>idea实现代码热部署</title>
      <link>http://localhost:1313/idea-realizes-code-hot-deployment.html</link>
      <pubDate>Tue, 17 May 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/idea-realizes-code-hot-deployment.html</guid>
      <description>&lt;h2 id=&#34;dynamic-code-evolution-for-java&#34;&gt;Dynamic Code Evolution for Java&lt;/h2&gt;&#xA;&lt;p&gt;动态代码演进虚拟机 (DCE VM) 是对 Java HotSpot VM 的修改，它允许在运行时无限制地重新定义加载的类。HotSpot™ VM 的当前热交换机制只允许更改方法体。增强的 VM 允许添加和删除字段和方法以及更改类的超类型。&lt;/p&gt;&#xA;&lt;p&gt;1 需要使用 JDK 1.8.0_181 版本，因为 dcevm 需要和 jdk 版本匹配。&lt;/p&gt;&#xA;&lt;p&gt;2 下载插件：https://github.com/dcevm/dcevm/releases&lt;/p&gt;</description>
    </item>
    <item>
      <title>druid配置数据库连接使用密文密码</title>
      <link>http://localhost:1313/Druid-configures-database-connections-to-use-ciphertext-passwords.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Druid-configures-database-connections-to-use-ciphertext-passwords.html</guid>
      <description>&lt;p&gt;druid配置数据库连接使用密文密码&#xA;spring使用druid配置dataSource片段代码&#xA;dataSource配置&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xD;&#xA;&amp;lt;!-- 基于Druid数据库链接池的数据源配置 --&amp;gt;&#xD;&#xA;&amp;lt;bean id=&amp;#34;dataSource&amp;#34; class=&amp;#34;com.alibaba.druid.pool.DruidDataSource&amp;#34; init-method=&amp;#34;init&amp;#34; destroy-method=&amp;#34;close&amp;#34;&amp;gt;&#xD;&#xA;&amp;lt;!-- 基本属性driverClassName、 url、user、password --&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;driverClassName&amp;#34; value=&amp;#34;com.mysql.jdbc.Driver&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;url&amp;#34; value=&amp;#34;${jdbc.url}&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;username&amp;#34; value=&amp;#34;${jdbc.username}&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;password&amp;#34; value=&amp;#34;${jdbc.password}&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;!-- 配置初始化大小、最小、最大 --&amp;gt;&#xD;&#xA;&amp;lt;!-- 通常来说，只需要修改initialSize、minIdle、maxActive --&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;initialSize&amp;#34; value=&amp;#34;2&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;minIdle&amp;#34; value=&amp;#34;2&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;maxActive&amp;#34; value=&amp;#34;30&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;testWhileIdle&amp;#34; value=&amp;#34;false&amp;#34; /&amp;gt;&#xD;&#xA;&#xD;&#xA;&amp;lt;!-- 配置获取连接等待超时的时间 --&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;maxWait&amp;#34; value=&amp;#34;5000&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;minEvictableIdleTimeMillis&amp;#34; value=&amp;#34;30000&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;timeBetweenEvictionRunsMillis&amp;#34; value=&amp;#34;60000&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;!-- 解密密码必须要配置的项 --&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;filters&amp;#34; value=&amp;#34;config&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;property name=&amp;#34;connectionProperties&amp;#34; value=&amp;#34;config.decrypt=true&amp;#34; /&amp;gt;&#xD;&#xA;&amp;lt;/bean&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;jdbc.properties&lt;/p&gt;</description>
    </item>
    <item>
      <title>freemarker 使用记录</title>
      <link>http://localhost:1313/how-to-use-freemarker.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/how-to-use-freemarker.html</guid>
      <description>&lt;h2 id=&#34;1long类型显示带逗号&#34;&gt;1、Long类型显示带逗号&lt;/h2&gt;&#xA;&lt;p&gt;如 id=1,234;&lt;/p&gt;&#xA;&lt;p&gt;解决的方案是，增加配置 &lt;strong&gt;number_format: &amp;lsquo;#&amp;rsquo;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;spring:&#xD;&#xA;    profiles:&#xD;&#xA;        active: &amp;#39;@profileActive@&amp;#39;&#xD;&#xA;    application:&#xD;&#xA;        name: blog-web&#xD;&#xA;    freemarker:&#xD;&#xA;        allow-request-override: false&#xD;&#xA;        allow-session-override: false&#xD;&#xA;        cache: false&#xD;&#xA;        charset: UTF-8&#xD;&#xA;        check-template-location: true&#xD;&#xA;        content-type: text/html&#xD;&#xA;        enabled: true&#xD;&#xA;        expose-request-attributes: false&#xD;&#xA;        expose-session-attributes: false&#xD;&#xA;        expose-spring-macro-helpers: true&#xD;&#xA;        prefer-file-system-access: true&#xD;&#xA;        suffix: .ftl&#xD;&#xA;        template-loader-path: classpath:/templates/&#xD;&#xA;        settings:&#xD;&#xA;            template_update_delay: 0&#xD;&#xA;            default_encoding: UTF-8&#xD;&#xA;            classic_compatible: true&#xD;&#xA;            number_format: &amp;#39;#&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2boolean类型false返回空&#34;&gt;2、boolean类型false返回空&lt;/h2&gt;&#xA;&lt;p&gt;如：var flag=; //当false的时候为空，true的时候为空&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var isPrivate = ${article.private};//原始的写法&#xD;&#xA;var isPrivate = ${article.private?string(&amp;#34;true&amp;#34;,&amp;#34;false&amp;#34;)};//改进的写法&#xD;&#xA;&#xD;&#xA;if(isPrivate || isPrivate == &amp;#39;true&amp;#39;) {&#xD;&#xA;      $(&amp;#34;#lockModal&amp;#34;).modal(&amp;#39;show&amp;#39;)&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;借用网上的一段解释&lt;/p&gt;</description>
    </item>
    <item>
      <title>GC调优参数</title>
      <link>http://localhost:1313/GC-tuning-parameters.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/GC-tuning-parameters.html</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;原文地址： &lt;a href=&#34;https://juejin.im/post/5c94a123f265da610916081f&#34;&gt;https://juejin.im/post/5c94a123f265da610916081f&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;jvm-配置常用参数&#34;&gt;JVM 配置常用参数&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;堆参数；&lt;/li&gt;&#xA;&lt;li&gt;回收器参数；&lt;/li&gt;&#xA;&lt;li&gt;项目中常用配置；&lt;/li&gt;&#xA;&lt;li&gt;常用组合；&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;堆参数&#34;&gt;堆参数&lt;/h3&gt;&#xA;&lt;p&gt;&#xD;&#xA;        &lt;img class=&#34;mx-auto&#34; alt=&#34;img&#34; src=&#34;https://ask.qcloudimg.com/http-save/yehe-1130324/975rk4d0wx.jpeg?imageView2/2/w/1620&#34; /&gt;   &#xD;&#xA;    &lt;/p&gt;&#xA;&lt;h3 id=&#34;回收器参数&#34;&gt;回收器参数&lt;/h3&gt;&#xA;&lt;p&gt;&#xD;&#xA;        &lt;img class=&#34;mx-auto&#34; alt=&#34;img&#34; src=&#34;https://ask.qcloudimg.com/http-save/yehe-1130324/34nzellt71.jpeg?imageView2/2/w/1620&#34; /&gt;   &#xD;&#xA;    &lt;/p&gt;&#xA;&lt;p&gt;如上表所示，目前&lt;strong&gt;主要有串行、并行和并发三种&lt;/strong&gt;，对于大内存的应用而言，串行的性能太低，因此使用到的主要是并行和并发两种。并行和并发 GC 的策略通过 &lt;code&gt;UseParallelGC &lt;/code&gt;和&lt;code&gt; UseConcMarkSweepGC&lt;/code&gt; 来指定，还有一些细节的配置参数用来配置策略的执行方式。例如：&lt;code&gt;XX:ParallelGCThreads&lt;/code&gt;， &lt;code&gt;XX:CMSInitiatingOccupancyFraction&lt;/code&gt; 等。 通常：Young 区对象回收只可选择并行（耗时间），Old 区选择并发（耗 CPU）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>idea快捷键</title>
      <link>http://localhost:1313/idea-shortcuts.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/idea-shortcuts.html</guid>
      <description>&lt;p&gt;&#xD;&#xA;        &lt;img class=&#34;mx-auto&#34; alt=&#34;image-20220429154243334&#34; src=&#34;https://static.gzcx.net/figure_bed/20220429154243.png-94rg002&#34; /&gt;   &#xD;&#xA;    &lt;/p&gt;&#xA;&lt;h2 id=&#34;ctrl&#34;&gt;Ctrl&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在当前文件进行文本查找 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + R&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在当前文件进行文本替换 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Z&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;撤销 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Y&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;删除光标所在行 或 删除选中的行 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + X&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;剪切光标所在行 或 剪切选择内容&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + C&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;复制光标所在行 或 复制选择内容&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + D&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + W&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + E&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示最近打开的文件记录列表&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + N&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;根据输入的 &lt;strong&gt;类名&lt;/strong&gt; 查找类文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + G&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在当前文件跳转到指定行处&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + J&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;插入自定义动态代码模板&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + P&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;方法参数提示显示&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Q&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;光标所在的变量 / 类名 / 方法名等上面（也可以在提示补充的时候按），显示文档内容&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + U&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;前往当前光标所在的方法的父类的方法 / 接口定义&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + B&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;进入光标所在的方法/变量的接口或是定义出，等效于 &lt;code&gt;Ctrl + 左键单击&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + K&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;版本控制提交项目，需要此项目有加入到版本控制才可用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + T&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;版本控制更新项目，需要此项目有加入到版本控制才可用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + H&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示当前类的层次结构&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + O&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选择可重写的方法&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + I&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选择可继承的方法&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + +&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;展开代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + -&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;折叠代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + /&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + [&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;移动光标到当前所在代码的花括号开始位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + ]&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;移动光标到当前所在代码的花括号结束位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在光标所在的错误代码出显示错误信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;调转到所选中的词的下一个引用位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;关闭当前编辑文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;执行 Make Project 操作&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选中文件 / 文件夹，使用助记符设定 / 取消书签&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + F12&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Tab&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;编辑窗口切换，如果在切换的过程又加按上delete，则是关闭对应选中的窗口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Enter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;智能分隔行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + End&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;跳到文件尾&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Home&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;跳到文件头&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Space&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 &lt;code&gt;Ctrl + 逗号&lt;/code&gt; &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Delete&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;删除光标后面的单词或是中文句&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + BackSpace&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;删除光标前面的单词或是中文句&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + 1,2,3&amp;hellip;9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;定位到对应数值的书签位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + 左键单击&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在打开的文件标题上，弹出该文件路径&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + 光标定位&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;按 Ctrl 不要松开，会显示光标所在的类信息摘要&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + 左方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;光标跳转到当前单词 / 中文句的左侧开头位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + 右方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;光标跳转到当前单词 / 中文句的右侧开头位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + 前方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;等效于鼠标滚轮向前效果&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + 后方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;等效于鼠标滚轮向后效果&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;alt&#34;&gt;Alt&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + `&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示版本控制常用操作菜单弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Q&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出一个提示，显示当前类的声明 / 上下文信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + F1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + F2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对于前面页面，显示各类浏览器打开目标选择弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + F3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选中文本，逐个往下查找相同文本，并高亮显示&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + F7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;查找光标所在的方法 / 变量 / 类被调用的地方&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + F8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Home&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;定位 / 显示到当前文件的 &lt;code&gt;Navigation Bar&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Enter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Insert&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;代码自动生成，如生成对象的 set / get 方法，构造函数，toString() 等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + 左方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;按左方向切换当前已打开的文件视图&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + 右方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;按右方向切换当前已打开的文件视图&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + 前方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当前光标跳转到当前文件的前一个方法名位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + 后方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当前光标跳转到当前文件的后一个方法名位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + 1,2,3&amp;hellip;9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示对应数值的选项卡，其中 1 是 Project 用得最多，Alt+7展示方法列表&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;shift&#34;&gt;Shift&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;如果有外部文档可以连接外部文档&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;跳转到上一个高亮错误 或 警告位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在查找模式下，查找匹配上一个&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对当前打开的文件，使用新Windows窗口打开，旧窗口保留&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对文件 / 文件夹 重命名&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，跳出，表现出来的效果跟 &lt;code&gt;F9&lt;/code&gt; 一样&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;等效于点击工具栏的 &lt;code&gt;Debug&lt;/code&gt; 按钮&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;等效于点击工具栏的 &lt;code&gt;Run&lt;/code&gt; 按钮&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + F11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出书签显示层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + Tab&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;取消缩进&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + ESC&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;隐藏当前 或 最后一个激活的工具窗口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + End&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选中光标到当前行尾位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + Home&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选中光标到当前行头位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + Enter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;开始新一行。光标所在行下空出一行，光标定位到新行位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + 左键单击&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在打开的文件名上按此快捷键，可以关闭当前打开文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Shift + 滚轮前后滚动&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当前文件的横向滚动轴滚动&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;ctrl--alt&#34;&gt;Ctrl + Alt&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + L&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;格式化代码，可以对当前文件和整个包目录使用 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + O&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;优化导入的类，可以对当前文件和整个包目录使用 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + I&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;光标所在行 或 选中部分进行自动代码缩进，有点类似格式化&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + T&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对选中的代码弹出环绕选项弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + J&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出模板选择窗口，讲选定的代码加入动态模板中&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + H&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;调用层次&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + B&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + V&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;快速引进变量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + M&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;提取代码块至独立的方法&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + Y&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;同步、刷新&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + S&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;打开 IntelliJ IDEA 系统设置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + F7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + F11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;切换全屏模式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + Enter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;光标所在行上空出一行，光标定位到新行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + Home&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出跟当前文件有关联的文件弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + Space&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;类名自动完成&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + 左方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;退回到上一个操作的地方 &lt;code&gt;（必备）**（注意与其他软件快捷键冲突）**&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + 右方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;前进到上一个操作的地方 &lt;code&gt;（必备）**（注意与其他软件快捷键冲突）**&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + 前方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在查找模式下，跳到上个查找的文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Alt + 后方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在查找模式下，跳到下个查找的文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;ctrl--shift&#34;&gt;Ctrl + Shift&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;根据输入内容查找整个项目 或 指定目录内文件 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + R&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + J&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;自动将下一行合并到当前行末尾 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Z&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;取消撤销 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + W&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + N&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;通过文件名定位 / 打开文件 / 目录，打开目录需要在输入的内容后面多加一个正斜杠 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + U&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对选中的代码进行大 / 小写轮流转换 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + T&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + C&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;复制当前文件磁盘路径到剪贴板&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + V&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出缓存的最近拷贝的内容管理器弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + E&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示最近修改的文件列表的弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + H&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示方法层次结构&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + B&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;跳转到类型声明处&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + I&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;快速查看光标所在的方法 或 类的定义&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + A&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;查找动作 / 设置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + /&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;代码块注释 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + [&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选中从光标所在位置到它的顶部中括号位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + ]&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选中从光标所在位置到它的底部中括号位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + +&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;展开所有代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + -&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;折叠所有代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + F7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;高亮显示所有该选中文本，按Esc高亮消失&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + F8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，指定断点进入条件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + F9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;编译选中的文件 / 包 / Module&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + F12&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;编辑器最大化&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Space&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;智能代码提示&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Enter&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;自动结束代码，行末自动添加分号 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Backspace&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;退回到上次修改的地方&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + 1,2,3&amp;hellip;9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;快速添加指定数值的书签&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + 左方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在代码文件上，光标跳转到当前单词 / 中文句的左侧开头位置，同时选中该单词 / 中文句&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + 右方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在代码文件上，光标跳转到当前单词 / 中文句的右侧开头位置，同时选中该单词 / 中文句&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + 左方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在光标焦点是在工具选项卡上，缩小选项卡区域&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + 右方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在光标焦点是在工具选项卡上，扩大选项卡区域&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + 前方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;光标放在方法名上，将方法移动到上一个方法前面，调整方法排序&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + 后方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;光标放在方法名上，将方法移动到下一个方法前面，调整方法排序&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;alt--shift&#34;&gt;Alt + Shift&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + N&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选择 / 添加 task&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示添加到收藏夹弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + C&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;查看最近操作项目的变化情况列表&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;添加到收藏夹&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + I&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;查看项目当前文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + F7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + F9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出 &lt;code&gt;Debug&lt;/code&gt; 的可选择菜单&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + F10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出 &lt;code&gt;Run&lt;/code&gt; 的可选择菜单&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + 左键双击&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;选择被双击的单词 / 中文句，按住不放，可以同时选择其他单词 / 中文句&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + 前方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;移动光标所在行向上移动&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Alt + Shift + 后方向键&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;移动光标所在行向下移动&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;ctrl--shift--alt&#34;&gt;Ctrl + Shift + Alt&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Alt + V&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;无格式黏贴&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Alt + N&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;前往指定的变量 / 方法&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Alt + S&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;打开当前项目设置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + Alt + C&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;复制参考信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;快捷键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;介绍&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;跳转到下一个高亮错误 或 警告位置 &lt;code&gt;（必备）&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在查找模式下，定位到下一个匹配处&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;编辑源&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F9&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F11&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;添加书签&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F12&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;回到前一个工具窗口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Tab&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;缩进&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ESC&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;从工具窗口进入代码文件窗口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;连按两次Shift&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;弹出 &lt;code&gt;Search Everywhere&lt;/code&gt; 弹出层&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>java spi入门</title>
      <link>http://localhost:1313/Getting-started-with-java-spi.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Getting-started-with-java-spi.html</guid>
      <description>&lt;h3 id=&#34;1什么是spi&#34;&gt;1、什么是SPI&lt;/h3&gt;&#xA;&lt;p&gt;​&#x9;SPI全称Service Provider Interface，是Java提供的一套用来被第三方实现或者扩展的接口，它可以用来启用框架扩展和替换组件。 SPI的作用就是为这些被扩展的API寻找服务实现。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2spi和api的区别&#34;&gt;2、SPI和API的区别&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;spi &lt;strong&gt;Service Provider Interface&lt;/strong&gt; &lt;code&gt;调用方&lt;/code&gt;来制定接口，&lt;code&gt;实现方&lt;/code&gt;来针对接口来实现不同的实现。&lt;code&gt;调用方&lt;/code&gt;来选择自己需要的&lt;code&gt;实现方&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;API Application Programming Interface&#xA;大多数情况下，都是实现方来制定接口并完成对接口的不同实现，调用方仅仅依赖却无权选择不同实现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://imgchr.com/i/DCEICq&#34;&gt;&#xD;&#xA;        &lt;img class=&#34;mx-auto&#34; alt=&#34;SPI与API的区别&#34; src=&#34;https://s3.ax1x.com/2020/11/14/DCEICq.png&#34; /&gt;   &#xD;&#xA;    &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>java swing总结</title>
      <link>http://localhost:1313/java-swingSummary.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/java-swingSummary.html</guid>
      <description>&lt;h3 id=&#34;1swing使用体验&#34;&gt;1、swing使用体验&lt;/h3&gt;&#xA;&lt;p&gt;刚开始出于好奇心想体验下java开发的桌面程序，网上搜索了一把，主流的就swing和javafx。一番体验和对比。最终还是倒向了swing.对于一个后端开发来说，swing绝对是完胜。理解好几个重要的概念，界面的事情交给框架和三方。&lt;/p&gt;&#xA;&lt;p&gt;下面从几个维度对这两个技术简单的对比一下：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;swing&lt;/th&gt;&#xA;          &lt;th&gt;javafx&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;界面&lt;/td&gt;&#xA;          &lt;td&gt;界面一般&lt;/td&gt;&#xA;          &lt;td&gt;理论上完全可以自定义，因为支持css&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;技术新颖&lt;/td&gt;&#xA;          &lt;td&gt;接近20年的历史&lt;/td&gt;&#xA;          &lt;td&gt;5年左右的历史&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;技术成熟度&lt;/td&gt;&#xA;          &lt;td&gt;久经考验，文档丰富&lt;/td&gt;&#xA;          &lt;td&gt;尚在孵化中&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;市面接纳度&lt;/td&gt;&#xA;          &lt;td&gt;老牌的都在用&lt;/td&gt;&#xA;          &lt;td&gt;没见到几个产品再用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;2swing-ui优化&#34;&gt;2、swing UI优化&lt;/h3&gt;&#xA;&lt;p&gt;swing默认的ui的确有点难看，但是它提供了一个lookandfeel来支持ui的优化。&lt;/p&gt;</description>
    </item>
    <item>
      <title>java内存优化的常见方法</title>
      <link>http://localhost:1313/java-memory-optimization.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/java-memory-optimization.html</guid>
      <description>&lt;h2 id=&#34;1慎用new&#34;&gt;1、慎用new&lt;/h2&gt;&#xA;&lt;p&gt;&#xD;&#xA;        &lt;img class=&#34;mx-auto&#34; alt=&#34;优化无极限&#34; src=&#34;https://static.gzcx.net/oneblog/20210724220825605.png-94rg002&#34; /&gt;   &#xD;&#xA;    &#xA;new就意味着会分配对应的内存空间。利用jdk本身的变量&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;错误&lt;/th&gt;&#xA;          &lt;th&gt;建议&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;new Boolean(true)&lt;/td&gt;&#xA;          &lt;td&gt;Boolean.TRUE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;new Integer()&lt;/td&gt;&#xA;          &lt;td&gt;Integer.valueOf(int i)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;2string操作&#34;&gt;2、String操作&lt;/h2&gt;&#xA;&lt;p&gt;用StringBuffer替换+操作&lt;/p&gt;&#xA;&lt;h2 id=&#34;3容易忽略的细节&#34;&gt;3、容易忽略的细节&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;细节&lt;/th&gt;&#xA;          &lt;th&gt;建议&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;HashMap&lt;/td&gt;&#xA;          &lt;td&gt;初始化指定大小&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;for循环减少变量的计算&lt;/td&gt;&#xA;          &lt;td&gt;for( inti= 0,len= list.size();i&amp;lt;len;i++)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;对象尽量在确定的范围内创建&lt;/td&gt;&#xA;          &lt;td&gt;if(i== 1){A a = newA();}&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;final中及时释放资源&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;try cath&lt;/td&gt;&#xA;          &lt;td&gt;不在循环内部使用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Map遍历&lt;/td&gt;&#xA;          &lt;td&gt;使用Entry操作&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;4其他的有效的建议&#34;&gt;4、其他的有效的建议&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;多使用单例&lt;/li&gt;&#xA;&lt;li&gt;减少static的使用&lt;/li&gt;&#xA;&lt;li&gt;内部多使用基本的数据类型&lt;/li&gt;&#xA;&lt;li&gt;尽量使用位运算。int num = a * 4;可改写 intn um = a &amp;laquo; 2;&lt;/li&gt;&#xA;&lt;li&gt;HashMap、StringBuffer初始化尽量指定大小。避免扩容复制带来的消耗&lt;/li&gt;&#xA;&lt;li&gt;无效的局部变量，尽早显示指定null&lt;/li&gt;&#xA;&lt;li&gt;数组的拷贝尽量使用系统函数 &lt;strong&gt;System.arraycopy ()&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;高频使用对用使用缓存&lt;/li&gt;&#xA;&lt;li&gt;慎用异常控制流程。因为stack track消耗不小&lt;/li&gt;&#xA;&lt;li&gt;try catch&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Java线上故障排查技巧</title>
      <link>http://localhost:1313/Java-Online-Troubleshooting-Tips.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Java-Online-Troubleshooting-Tips.html</guid>
      <description>&lt;h3 id=&#34;1分类&#34;&gt;1、分类&lt;/h3&gt;&#xA;&lt;p&gt;线上故障主要会包括 CPU、磁盘、内存以及网络问题，而大多数故障可能会包含不止一个层面的问题，所以进行排查时候尽量四个方面依次排查一遍。&lt;/p&gt;&#xA;&lt;p&gt;同时例如 jstack、jmap 等工具也是不囿于一个方面的问题的，基本上出问题就是 df、free、top 三连，然后依次 jstack、jmap 伺候，具体问题具体分析即可。&lt;/p&gt;</description>
    </item>
    <item>
      <title>juc介绍</title>
      <link>http://localhost:1313/java-juc.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/java-juc.html</guid>
      <description>&lt;h2 id=&#34;1日常工作中的并发&#34;&gt;1、日常工作中的并发&lt;/h2&gt;&#xA;&lt;p&gt;今天的日程&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jira待处理的任务两个&lt;/li&gt;&#xA;&lt;li&gt;完成测试环境的发布，通知测试开始验证&lt;/li&gt;&#xA;&lt;li&gt;钉钉联系客户了解问题发生的过程&lt;/li&gt;&#xA;&lt;li&gt;迭代新功能开发&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;实际过程中我们怎么做？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;先在发布平台上把发布的过程触发起来；&lt;/li&gt;&#xA;&lt;li&gt;钉钉给客户发消息询问问题详情；&lt;/li&gt;&#xA;&lt;li&gt;打开jira,开始分析问题&lt;/li&gt;&#xA;&lt;li&gt;过一段时间回头看下发布的过程是否已经完成了，客户是否有回复&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;并发充分利用cpu资源，提高程序的响应速度&lt;/p&gt;</description>
    </item>
    <item>
      <title>jvm 知识点汇总</title>
      <link>http://localhost:1313/Summary-of-jvm-knowledge-points.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Summary-of-jvm-knowledge-points.html</guid>
      <description>&lt;p&gt;无论什么级别的Java从业者，JVM都是进阶时必须迈过的坎。不管是工作还是面试中，JVM都是必考题。如果不懂JVM的话，薪酬会非常吃亏（近70%的面试者挂在JVM上了）。&lt;/p&gt;&#xA;&lt;p&gt;掌握了JVM机制，就等于学会了深层次解决问题的方法。对于Java开发者而言，只有熟悉底层虚拟机的运行机制，才能通过JVM日志深入到字节码的层次去分析排查问题，发现隐性的系统缺陷，进而提升系统性能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>故障处理总纲</title>
      <link>http://localhost:1313/Troubleshooting-outline.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Troubleshooting-outline.html</guid>
      <description>&lt;h3 id=&#34;1前言&#34;&gt;1、前言&lt;/h3&gt;&#xA;&lt;p&gt;没有完美的程序，是程序都有bug,都有容量限制。所以出现故障也在情理之中，那么面对突如其来的bug,我们该如何应对呢？这是一个值得思考的问题？&lt;/p&gt;&#xA;&lt;h3 id=&#34;2核心原则&#34;&gt;2、核心原则&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;将正在发生或已发生故障的损害程度减轻到最低-&lt;strong&gt;恢复服务&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;而与之对应的错误做法是成谜于追求破案的情结之中，无法自拔，而这样做的结果往往都是时间过去了，原因没找到，故障进一步升级，这个需要引起重视。&lt;/p&gt;</description>
    </item>
    <item>
      <title>故障处理系列-httpclient 3.x的bug引发的惨案</title>
      <link>http://localhost:1313/Troubleshooting-series-tragedy-caused-by-the-bug-of-httpclient-3.x.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Troubleshooting-series-tragedy-caused-by-the-bug-of-httpclient-3.x.html</guid>
      <description>&lt;h3 id=&#34;1故障现象描述&#34;&gt;1、故障现象描述&lt;/h3&gt;&#xA;&lt;p&gt;调用链路是 A-&amp;gt;B-&amp;gt;C&lt;/p&gt;&#xA;&lt;p&gt;目前出故障的是B服务。A是网关，C是底层服务&lt;/p&gt;&#xA;&lt;p&gt;故障的现象是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A对外出现大量的504&lt;/li&gt;&#xA;&lt;li&gt;B的线程数暴增&lt;/li&gt;&#xA;&lt;li&gt;B的流量骤减，一段时间趋近于0&lt;/li&gt;&#xA;&lt;li&gt;C的请求响应无明显异常&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2故障分析&#34;&gt;2、故障分析&lt;/h3&gt;&#xA;&lt;p&gt;从B的流量骤减至0，然后A大量504可以推测出可能是A把B给熔断了，根据这个思路排查，最终定位到了B的熔断策略中有一个最大线程数的限制，这个跟B的线程数暴增是吻合的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>故障处理系列-大文件引发OOM</title>
      <link>http://localhost:1313/Troubleshooting-Series-Large-File-Causes-OOM.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Troubleshooting-Series-Large-File-Causes-OOM.html</guid>
      <description>&lt;h3 id=&#34;1场景还原&#34;&gt;1、场景还原&lt;/h3&gt;&#xA;&lt;p&gt;系统A是一个需要加载文件到内存中进行处理的系统&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大量的大文件并发请求过来&lt;/li&gt;&#xA;&lt;li&gt;收到大量的系统的内存告警&lt;/li&gt;&#xA;&lt;li&gt;收到大量的5xx告警，同时从监控可以看到大量的fullGC&lt;/li&gt;&#xA;&lt;li&gt;系统oom&lt;/li&gt;&#xA;&lt;li&gt;重启，过了3分钟故障再次发生&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2原因分析&#34;&gt;2、原因分析&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大量的大文件请求过来，导致系统中内存迅速消耗殆尽&lt;/li&gt;&#xA;&lt;li&gt;内存不够用触发fullGc&lt;/li&gt;&#xA;&lt;li&gt;频繁的gc导致系统卡顿，触发5xx&lt;/li&gt;&#xA;&lt;li&gt;gc无法维持内存的稳定，oom&lt;/li&gt;&#xA;&lt;li&gt;重启无法解决，是因为系统的是通过mq进行驱动的，重启能够是内存恢复，但是mq的重试机制又迅速点燃了这个故障，要想彻底解决，只能是清洗或过滤这一批异常数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;主要原因是系统层面未对这个大文件的场景进行考虑，超出了系统的处理能力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>故障处理系列-数据清洗堵塞mq</title>
      <link>http://localhost:1313/Troubleshooting-Series-Data-Cleaning-and-Blocking-MQ.html</link>
      <pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate>
      <guid>http://localhost:1313/Troubleshooting-Series-Data-Cleaning-and-Blocking-MQ.html</guid>
      <description>&lt;h3 id=&#34;1故障还原&#34;&gt;1、故障还原&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;系统负载迅速升高&lt;/li&gt;&#xA;&lt;li&gt;大量mq的发送被限流，影响到了核心业务（有强依赖mq驱动的）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2根因分析&#34;&gt;2、根因分析&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;上游的一个业务触发了系统的数据清洗&lt;/li&gt;&#xA;&lt;li&gt;清理的数据比较多，清洗的逻辑中需要对外发送大量的广播&lt;/li&gt;&#xA;&lt;li&gt;mq的发送频率过快，大量的超时，进而被熔断&lt;/li&gt;&#xA;&lt;li&gt;大量的mq无法完成发送&lt;/li&gt;&#xA;&lt;li&gt;上游大量基于mq驱动的业务受阻&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3处理办法&#34;&gt;3、处理办法&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;清洗数据为非核心业务，可以控制处理时间、策略。避免对核心业务的冲击&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
